'''
Jogo da velha
'''

import random


class JogoDaVelha:

    def __init__(self):
        self.board = []

    def create_board(self):
        self.board = [['-' for _ in range(3)] for _ in range(3)]

    def get_random_first_player(self):
        return random.randint(0, 1)
    
    def fix_spot(self, row, col, player):
        self.board[row][col] = player

    def has_player_won(self, player):
        n = len(self.board)

        # Verifica as linhas
        for i in range(n):
            if all([self.board[i][j] == player for j in range(n)]):
                return True

        # Verifica as colunas
        for i in range(n):
            if all([self.board[j][i] == player for j in range(n)]):
                return True

        # Verifica a diagonal principal
        if all([self.board[i][i] == player for i in range(n)]):
            return True

        # Verifica a diagonal secundária
        if all([self.board[i][n-i-1] == player for i in range(n)]):
            return True

        return False
        
    def is_board_filled(self):
        for row in self.board:
            for item in row:
                if item == '-':
                    return False
        return True
    
    def swap_player_turn(self, player):
        return 'X' if player == 'O' else 'O'
    
    def show_board(self):
        for row in self.board:
            print(" | ".join(row))
        print()

    def start_game(self):
        self.create_board()
        player = 'X' if self.get_random_first_player() == 1 else 'O'
        game_over = False

        while not game_over:
            self.show_board()
            print(f'Turno do jogador {player}')

            try:
                row, col = list(map(int, input('Insira o número da linha e coluna para marcar (1-3 para ambos): ').split()))

                if row < 1 or col < 1 or row > 3 or col > 3:
                    raise ValueError('Os números da linha e da coluna devem estar entre 1 e 3.')

                if self.board[row - 1][col - 1] != '-':
                    raise ValueError('Essa posição já está ocupada.')

                self.fix_spot(row - 1, col - 1, player)

                game_over = self.has_player_won(player)
                if game_over:
                    self.show_board()
                    print(f'Jogador(a) {player} ganhou o jogo!')
                    break

                game_over = self.is_board_filled()
                if game_over:
                    self.show_board()
                    print('Empate!')
                    break

                player = self.swap_player_turn(player)

            except ValueError as err:
                print(err)

        print('Fim de jogo.')


if __name__ == '__main__':
    jogo_da_velha = JogoDaVelha()
    jogo_da_velha.start_game()
